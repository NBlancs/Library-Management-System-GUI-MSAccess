/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lmsframes;

import com.sun.jdi.connect.spi.Connection;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;
// import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author User
 */
public class issueFrm extends javax.swing.JFrame {

    /**
     * Creates new form issueFrm
     */
    public issueFrm() {
        initComponents();
        JC();
        dayspinner.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                updateDueDate();
            }
        });
        CustomerModule();
        Image icon = new ImageIcon(this.getClass().getResource("/iconimage.png")).getImage();
        this.setIconImage(icon);
    }

    java.sql.Connection con;
    java.sql.PreparedStatement pst;
    ResultSet rs;

    private void JC() {
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
            pst = con.prepareStatement("select Title from TBL_books where Availability = 'Available'");

            rs = pst.executeQuery();
            bookcombobox.removeAll();

            while (rs.next()) {
                bookcombobox.addItem(rs.getString(1));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void CustomerModule() {
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
            pst = con.prepareStatement("select distinct firstName from TBL_customerModule");

            rs = pst.executeQuery();
            customercombobox.removeAll();

            while (rs.next()) {
                customercombobox.addItem(rs.getString(1));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void updateDueDate() {
        // Retrieve the values
        String daysOfUsage = dayspinner.getValue().toString();
        String dateIssued = dateissued.getText();

        // Check if both values are not empty
        if (!daysOfUsage.isEmpty() && dateIssued.trim().length() > 0) {
            try {
                // Parse dateIssued
                SimpleDateFormat inputFormat = new SimpleDateFormat("MM-dd-yyyy");
                Date parsedDate = inputFormat.parse(dateIssued);

                // Calculate dueDate
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(parsedDate);
                int daysToAdd = Integer.parseInt(daysOfUsage);
                calendar.add(Calendar.DAY_OF_MONTH, daysToAdd);
                Date dueDateObj = calendar.getTime();

                // Format the dueDate and set it in the duedate text field
                SimpleDateFormat outputFormat = new SimpleDateFormat("MM-dd-yyyy");
                String formattedDueDate = outputFormat.format(dueDateObj);
                duedate.setText(formattedDueDate);

            } catch (ParseException | NumberFormatException ex) {
                Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main1 = new rojeru_san.complementos.RSButtonHover();
        admin1 = new rojeru_san.complementos.RSButtonHover();
        issue1 = new rojeru_san.complementos.RSButtonHover();
        returnBook1 = new rojeru_san.complementos.RSButtonHover();
        history1 = new rojeru_san.complementos.RSButtonHover();
        logout1 = new rojeru_san.complementos.RSButtonHover();
        main2 = new rojeru_san.complementos.RSButtonHover();
        admin2 = new rojeru_san.complementos.RSButtonHover();
        issue2 = new rojeru_san.complementos.RSButtonHover();
        returnBook2 = new rojeru_san.complementos.RSButtonHover();
        history2 = new rojeru_san.complementos.RSButtonHover();
        logout2 = new rojeru_san.complementos.RSButtonHover();
        admin = new rojeru_san.complementos.RSButtonHover();
        issue = new rojeru_san.complementos.RSButtonHover();
        returnBook = new rojeru_san.complementos.RSButtonHover();
        history = new rojeru_san.complementos.RSButtonHover();
        logout = new rojeru_san.complementos.RSButtonHover();
        main3 = new rojeru_san.complementos.RSButtonHover();
        bookcombobox = new javax.swing.JComboBox<>();
        authortxt = new javax.swing.JTextField();
        customercombobox = new javax.swing.JComboBox<>();
        firstNametxt = new javax.swing.JTextField();
        lastNametxt = new javax.swing.JTextField();
        genretxt = new javax.swing.JTextField();
        isbntxt = new javax.swing.JTextField();
        phonetxt = new javax.swing.JFormattedTextField();
        emailtxt = new javax.swing.JTextField();
        dateissued = new javax.swing.JFormattedTextField();
        dayspinner = new javax.swing.JSpinner();
        duedate = new javax.swing.JTextField();
        issueBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System - Issue Book");
        setMaximumSize(new java.awt.Dimension(976, 579));
        setMinimumSize(new java.awt.Dimension(976, 579));
        setPreferredSize(new java.awt.Dimension(976, 579));
        setResizable(false);
        getContentPane().setLayout(null);

        main1.setBackground(new java.awt.Color(113, 201, 206));
        main1.setBorder(null);
        main1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main1.setColorHover(new java.awt.Color(166, 227, 233));
        main1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main1ActionPerformed(evt);
            }
        });
        getContentPane().add(main1);
        main1.setBounds(0, 95, 48, 24);

        admin1.setBackground(new java.awt.Color(113, 201, 206));
        admin1.setBorder(null);
        admin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin1.setColorHover(new java.awt.Color(166, 227, 233));
        admin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin1ActionPerformed(evt);
            }
        });
        getContentPane().add(admin1);
        admin1.setBounds(0, 147, 48, 24);

        issue1.setBackground(new java.awt.Color(113, 201, 206));
        issue1.setBorder(null);
        issue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue1.setColorHover(new java.awt.Color(166, 227, 233));
        issue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue1ActionPerformed(evt);
            }
        });
        getContentPane().add(issue1);
        issue1.setBounds(0, 199, 48, 24);

        returnBook1.setBackground(new java.awt.Color(113, 201, 206));
        returnBook1.setBorder(null);
        returnBook1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook1.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook1ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook1);
        returnBook1.setBounds(0, 251, 48, 24);

        history1.setBackground(new java.awt.Color(113, 201, 206));
        history1.setBorder(null);
        history1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history1.setColorHover(new java.awt.Color(166, 227, 233));
        history1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history1ActionPerformed(evt);
            }
        });
        getContentPane().add(history1);
        history1.setBounds(0, 303, 48, 24);

        logout1.setBackground(new java.awt.Color(113, 201, 206));
        logout1.setBorder(null);
        logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout1.setColorHover(new java.awt.Color(166, 227, 233));
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });
        getContentPane().add(logout1);
        logout1.setBounds(0, 456, 48, 24);

        main2.setBackground(new java.awt.Color(113, 201, 206));
        main2.setBorder(null);
        main2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main2.setColorHover(new java.awt.Color(166, 227, 233));
        main2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main2ActionPerformed(evt);
            }
        });
        getContentPane().add(main2);
        main2.setBounds(0, 95, 48, 24);

        admin2.setBackground(new java.awt.Color(113, 201, 206));
        admin2.setBorder(null);
        admin2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin2.setColorHover(new java.awt.Color(166, 227, 233));
        admin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin2ActionPerformed(evt);
            }
        });
        getContentPane().add(admin2);
        admin2.setBounds(0, 147, 48, 24);

        issue2.setBackground(new java.awt.Color(113, 201, 206));
        issue2.setBorder(null);
        issue2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue2.setColorHover(new java.awt.Color(166, 227, 233));
        issue2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue2ActionPerformed(evt);
            }
        });
        getContentPane().add(issue2);
        issue2.setBounds(0, 199, 48, 24);

        returnBook2.setBackground(new java.awt.Color(113, 201, 206));
        returnBook2.setBorder(null);
        returnBook2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook2.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook2ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook2);
        returnBook2.setBounds(0, 251, 48, 24);

        history2.setBackground(new java.awt.Color(113, 201, 206));
        history2.setBorder(null);
        history2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history2.setColorHover(new java.awt.Color(166, 227, 233));
        history2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history2ActionPerformed(evt);
            }
        });
        getContentPane().add(history2);
        history2.setBounds(0, 303, 48, 24);

        logout2.setBackground(new java.awt.Color(113, 201, 206));
        logout2.setBorder(null);
        logout2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout2.setColorHover(new java.awt.Color(166, 227, 233));
        logout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout2ActionPerformed(evt);
            }
        });
        getContentPane().add(logout2);
        logout2.setBounds(0, 456, 48, 24);

        admin.setBackground(new java.awt.Color(113, 201, 206));
        admin.setBorder(null);
        admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin.setText(" ADMIN TOOLS");
        admin.setColorHover(new java.awt.Color(166, 227, 233));
        admin.setColorText(new java.awt.Color(0, 0, 0));
        admin.setColorTextHover(new java.awt.Color(0, 0, 0));
        admin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        getContentPane().add(admin);
        admin.setBounds(240, 15, 120, 24);

        issue.setBackground(new java.awt.Color(113, 201, 206));
        issue.setBorder(null);
        issue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue.setText(" ISSUE BOOK");
        issue.setColorHover(new java.awt.Color(166, 227, 233));
        issue.setColorText(new java.awt.Color(0, 0, 0));
        issue.setColorTextHover(new java.awt.Color(0, 0, 0));
        issue.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueActionPerformed(evt);
            }
        });
        getContentPane().add(issue);
        issue.setBounds(382, 15, 120, 24);

        returnBook.setBackground(new java.awt.Color(113, 201, 206));
        returnBook.setBorder(null);
        returnBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook.setText(" RETURN BOOK");
        returnBook.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook.setColorText(new java.awt.Color(0, 0, 0));
        returnBook.setColorTextHover(new java.awt.Color(0, 0, 0));
        returnBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook);
        returnBook.setBounds(510, 15, 130, 24);

        history.setBackground(new java.awt.Color(113, 201, 206));
        history.setBorder(null);
        history.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history.setText(" HISTORY");
        history.setColorHover(new java.awt.Color(166, 227, 233));
        history.setColorText(new java.awt.Color(0, 0, 0));
        history.setColorTextHover(new java.awt.Color(0, 0, 0));
        history.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });
        getContentPane().add(history);
        history.setBounds(656, 15, 90, 24);

        logout.setBackground(new java.awt.Color(113, 201, 206));
        logout.setBorder(null);
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout.setText(" LOGOUT");
        logout.setColorHover(new java.awt.Color(166, 227, 233));
        logout.setColorText(new java.awt.Color(0, 0, 0));
        logout.setColorTextHover(new java.awt.Color(0, 0, 0));
        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(852, 15, 80, 24);

        main3.setBackground(new java.awt.Color(113, 201, 206));
        main3.setBorder(null);
        main3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main3.setText(" MAIN MENU");
        main3.setColorHover(new java.awt.Color(166, 227, 233));
        main3.setColorText(new java.awt.Color(0, 0, 0));
        main3.setColorTextHover(new java.awt.Color(0, 0, 0));
        main3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        main3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main3ActionPerformed(evt);
            }
        });
        getContentPane().add(main3);
        main3.setBounds(118, 15, 100, 24);

        bookcombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bookcomboboxItemStateChanged(evt);
            }
        });
        bookcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookcomboboxActionPerformed(evt);
            }
        });
        getContentPane().add(bookcombobox);
        bookcombobox.setBounds(244, 99, 200, 30);
        getContentPane().add(authortxt);
        authortxt.setBounds(244, 146, 200, 30);

        customercombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                customercomboboxItemStateChanged(evt);
            }
        });
        customercombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customercomboboxActionPerformed(evt);
            }
        });
        getContentPane().add(customercombobox);
        customercombobox.setBounds(244, 213, 200, 30);

        firstNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNametxtActionPerformed(evt);
            }
        });
        getContentPane().add(firstNametxt);
        firstNametxt.setBounds(244, 252, 200, 30);
        getContentPane().add(lastNametxt);
        lastNametxt.setBounds(244, 295, 200, 30);
        getContentPane().add(genretxt);
        genretxt.setBounds(593, 94, 200, 30);
        getContentPane().add(isbntxt);
        isbntxt.setBounds(593, 142, 200, 30);

        try {
            phonetxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(phonetxt);
        phonetxt.setBounds(593, 213, 200, 30);
        getContentPane().add(emailtxt);
        emailtxt.setBounds(593, 253, 200, 30);

        dateissued.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM-dd-yyyy"))));
        dateissued.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateissuedActionPerformed(evt);
            }
        });
        getContentPane().add(dateissued);
        dateissued.setBounds(243, 377, 200, 30);

        dayspinner.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        getContentPane().add(dayspinner);
        dayspinner.setBounds(243, 422, 200, 30);

        duedate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duedateActionPerformed(evt);
            }
        });
        getContentPane().add(duedate);
        duedate.setBounds(243, 467, 200, 30);

        issueBtn.setBackground(new java.awt.Color(204, 255, 204));
        issueBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        issueBtn.setText("ISSUE");
        issueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBtnActionPerformed(evt);
            }
        });
        getContentPane().add(issueBtn);
        issueBtn.setBounds(590, 400, 210, 60);

        jLabel1.setText("Note: Date Format is (mm-dd-yyyy)");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 340, 210, 16);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/bare-IssueBook-Frm.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 960, 540);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void main1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main1ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main1ActionPerformed

    private void admin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin1ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin1ActionPerformed

    private void issue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue1ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue1ActionPerformed

    private void returnBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook1ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook1ActionPerformed

    private void history1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history1ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history1ActionPerformed

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout1ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout1ActionPerformed

    private void main2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main2ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main2ActionPerformed

    private void admin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin2ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin2ActionPerformed

    private void issue2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue2ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue2ActionPerformed

    private void returnBook2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook2ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook2ActionPerformed

    private void history2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history2ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history2ActionPerformed

    private void logout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout2ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout2ActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_adminActionPerformed

    private void issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issueActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBookActionPerformed

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_historyActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void main3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main3ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main3ActionPerformed

    private void bookcomboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bookcomboboxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String book = (String) bookcombobox.getSelectedItem();
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
                con = DriverManager.getConnection("jdbc:ucanaccess://" + path);                pst = con.prepareStatement("SELECT Author,Genre,ISBN FROM TBL_books WHERE Title = ?");
                pst.setString(1, book);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    authortxt.setText(rs.getString("Author"));
                    genretxt.setText(rs.getString("Genre"));
                    isbntxt.setText(rs.getString("ISBN"));
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_bookcomboboxItemStateChanged

    private void bookcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookcomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookcomboboxActionPerformed

    private void customercomboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_customercomboboxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String book = (String) customercombobox.getSelectedItem();
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
                con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
                pst = con.prepareStatement("SELECT firstName,lastName,phoneNumber,emailAddress FROM TBL_customerModule WHERE firstName = ?");
                pst.setString(1, book);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    firstNametxt.setText(rs.getString("firstName"));
                    lastNametxt.setText(rs.getString("lastName"));
                    phonetxt.setText(rs.getString("phoneNumber"));
                    emailtxt.setText(rs.getString("emailAddress"));
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_customercomboboxItemStateChanged
    }
    private void customercomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customercomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customercomboboxActionPerformed

    private void firstNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNametxtActionPerformed

    private void dateissuedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateissuedActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_dateissuedActionPerformed

    private void duedateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duedateActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_duedateActionPerformed

    private void issueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBtnActionPerformed
        // TODO add your handling code here:
        String firstName, lastName, book, dateIssued, phoneNumber, emailAddress, dueDate, daysOfUsage;

        firstName = firstNametxt.getText();
        lastName = lastNametxt.getText();
        book = (String) bookcombobox.getSelectedItem();
        dateIssued = dateissued.getText();
        phoneNumber = phonetxt.getText();
        emailAddress = emailtxt.getText();
        dueDate = duedate.getText();
        daysOfUsage = dayspinner.getValue().toString();

        if (firstName.isEmpty() || lastName.isEmpty() || book.isEmpty() || dateIssued.isEmpty() || phoneNumber.isEmpty() || emailAddress.isEmpty() || dueDate.isEmpty() || daysOfUsage.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill up the textfields appropriately (proper formatting)", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        SimpleDateFormat inputFormat = new SimpleDateFormat("MM-dd-yyyy");
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");

        try {
            if (!dateIssued.isEmpty() && dateIssued.matches("\\d{2}-\\d{2}-\\d{4}")) {
                Date parsedDate = inputFormat.parse(dateIssued);
                String formattedDate = outputFormat.format(parsedDate);

                // Calculate dueDate by adding daysOfUsage to dateIssued
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(parsedDate);
                int daysToAdd = Integer.parseInt(daysOfUsage);
                calendar.add(Calendar.DAY_OF_MONTH, daysToAdd);
                Date dueDateObj = calendar.getTime();
                String formattedDueDate = outputFormat.format(dueDateObj);

                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
                con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
                pst = con.prepareStatement("insert into TBL_borrower(firstName,lastName,book,dateIssued,phoneNumber,emailAddress,dueDate,daysOfUsage)values(?,?,?,?,?,?,?,?)");

                pst.setString(1, firstName);
                pst.setString(2, lastName);
                pst.setString(3, book);
                pst.setString(4, formattedDate);
                pst.setString(5, phoneNumber);
                pst.setString(6, emailAddress);
                pst.setString(7, formattedDueDate);
                pst.setString(8, daysOfUsage);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Book Issued");

                pst = con.prepareStatement("UPDATE TBL_books SET Availability = 'Issued' WHERE Title = ?");
                pst.setString(1, book);
                pst.executeUpdate();

                firstNametxt.setText("");
                lastNametxt.setText("");
                bookcombobox.setSelectedItem("");
                dateissued.setText("");
                phonetxt.setText("");
                emailtxt.setText("");
                duedate.setText("");
                dayspinner.setValue(0);

                firstNametxt.requestFocus();
                // ... rest of your code ...
            }
        } catch (ParseException e) {
            Logger.getLogger(issueFrm.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, "Please Put Required Information");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_issueBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(issueFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(issueFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(issueFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(issueFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new issueFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSButtonHover admin;
    private rojeru_san.complementos.RSButtonHover admin1;
    private rojeru_san.complementos.RSButtonHover admin2;
    private javax.swing.JTextField authortxt;
    private javax.swing.JLabel background;
    private javax.swing.JComboBox<String> bookcombobox;
    private javax.swing.JComboBox<String> customercombobox;
    private javax.swing.JFormattedTextField dateissued;
    private javax.swing.JSpinner dayspinner;
    private javax.swing.JTextField duedate;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JTextField firstNametxt;
    private javax.swing.JTextField genretxt;
    private rojeru_san.complementos.RSButtonHover history;
    private rojeru_san.complementos.RSButtonHover history1;
    private rojeru_san.complementos.RSButtonHover history2;
    private javax.swing.JTextField isbntxt;
    private rojeru_san.complementos.RSButtonHover issue;
    private rojeru_san.complementos.RSButtonHover issue1;
    private rojeru_san.complementos.RSButtonHover issue2;
    private javax.swing.JButton issueBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lastNametxt;
    private rojeru_san.complementos.RSButtonHover logout;
    private rojeru_san.complementos.RSButtonHover logout1;
    private rojeru_san.complementos.RSButtonHover logout2;
    private rojeru_san.complementos.RSButtonHover main1;
    private rojeru_san.complementos.RSButtonHover main2;
    private rojeru_san.complementos.RSButtonHover main3;
    private javax.swing.JFormattedTextField phonetxt;
    private rojeru_san.complementos.RSButtonHover returnBook;
    private rojeru_san.complementos.RSButtonHover returnBook1;
    private rojeru_san.complementos.RSButtonHover returnBook2;
    // End of variables declaration//GEN-END:variables
}
