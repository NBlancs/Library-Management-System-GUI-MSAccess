/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lmsframes;

import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class mainFrm extends javax.swing.JFrame {

    /**
     * Creates new form mainFrm
     */
    public mainFrm() {
        initComponents();
        tableupdate();
        BookCounter();
        AuthorCounter();
        BorrowerCounter();
        Image icon = new ImageIcon(this.getClass().getResource("/iconimage.png")).getImage();
        this.setIconImage(icon);
    }

    Connection con;
    java.sql.PreparedStatement pst;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public void tableupdate() {
        int c;
        String selectedGenre = (String) filtercombobox.getSelectedItem();
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
            pst = con.prepareStatement("SELECT * FROM TBL_books WHERE genre = ? ORDER BY Title");
            pst.setString(1, selectedGenre);
            rs = pst.executeQuery();

            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel) bookTable.getModel();
            dft.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("bookid"));
                    v2.add(rs.getString("title"));
                    v2.add(rs.getString("author"));
                    v2.add(rs.getString("genre"));
                    v2.add(rs.getString("isbn"));
                    v2.add(rs.getString("publicationyear"));
                    v2.add(rs.getString("availability"));
                }
                dft.addRow(v2);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(mainFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mainFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void BookCounter() {

        try {
            pst = con.prepareStatement("select count (*) AS bookCount FROM TBL_books");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                int count = rs.getInt("bookCount");

                Bookcounter.setText(String.valueOf(count));
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void AuthorCounter() {

        try {
            pst = con.prepareStatement("select count (distinct Author) AS authorCount FROM TBL_books");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                int authcount = rs.getInt("authorCount");

                Authorcounter.setText(String.valueOf(authcount));
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void BorrowerCounter() {

        try {
            pst = con.prepareStatement("select count (*) AS borrowerCount FROM TBL_borrower");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                int borrowcount = rs.getInt("borrowerCount");

                borrowercounter1.setText(String.valueOf(borrowcount));
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        admin = new rojeru_san.complementos.RSButtonHover();
        main = new rojeru_san.complementos.RSButtonHover();
        issue = new rojeru_san.complementos.RSButtonHover();
        returnBook = new rojeru_san.complementos.RSButtonHover();
        history = new rojeru_san.complementos.RSButtonHover();
        logout = new rojeru_san.complementos.RSButtonHover();
        main1 = new rojeru_san.complementos.RSButtonHover();
        admin1 = new rojeru_san.complementos.RSButtonHover();
        issue1 = new rojeru_san.complementos.RSButtonHover();
        returnBook1 = new rojeru_san.complementos.RSButtonHover();
        history1 = new rojeru_san.complementos.RSButtonHover();
        logout1 = new rojeru_san.complementos.RSButtonHover();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookTable = new rojerusan.RSTableMetro1();
        NumofBooks = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Bookcounter = new javax.swing.JLabel();
        NumOfAuthors = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        Authorcounter = new javax.swing.JLabel();
        NumOfBorrowers1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        borrowercounter1 = new javax.swing.JLabel();
        filtercombobox = new javax.swing.JComboBox<>();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System - Main");
        setMaximumSize(new java.awt.Dimension(976, 579));
        setMinimumSize(new java.awt.Dimension(976, 579));
        setPreferredSize(new java.awt.Dimension(976, 579));
        setResizable(false);
        getContentPane().setLayout(null);

        admin.setBackground(new java.awt.Color(113, 201, 206));
        admin.setBorder(null);
        admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin.setText(" ADMIN TOOLS");
        admin.setColorHover(new java.awt.Color(166, 227, 233));
        admin.setColorText(new java.awt.Color(0, 0, 0));
        admin.setColorTextHover(new java.awt.Color(0, 0, 0));
        admin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        getContentPane().add(admin);
        admin.setBounds(240, 15, 120, 24);

        main.setBackground(new java.awt.Color(113, 201, 206));
        main.setBorder(null);
        main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main.setText(" MAIN MENU");
        main.setColorHover(new java.awt.Color(166, 227, 233));
        main.setColorText(new java.awt.Color(0, 0, 0));
        main.setColorTextHover(new java.awt.Color(0, 0, 0));
        main.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainActionPerformed(evt);
            }
        });
        getContentPane().add(main);
        main.setBounds(118, 15, 100, 24);

        issue.setBackground(new java.awt.Color(113, 201, 206));
        issue.setBorder(null);
        issue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue.setText(" ISSUE BOOK");
        issue.setColorHover(new java.awt.Color(166, 227, 233));
        issue.setColorText(new java.awt.Color(0, 0, 0));
        issue.setColorTextHover(new java.awt.Color(0, 0, 0));
        issue.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueActionPerformed(evt);
            }
        });
        getContentPane().add(issue);
        issue.setBounds(382, 15, 120, 24);

        returnBook.setBackground(new java.awt.Color(113, 201, 206));
        returnBook.setBorder(null);
        returnBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook.setText(" RETURN BOOK");
        returnBook.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook.setColorText(new java.awt.Color(0, 0, 0));
        returnBook.setColorTextHover(new java.awt.Color(0, 0, 0));
        returnBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook);
        returnBook.setBounds(510, 15, 130, 24);

        history.setBackground(new java.awt.Color(113, 201, 206));
        history.setBorder(null);
        history.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history.setText(" HISTORY");
        history.setColorHover(new java.awt.Color(166, 227, 233));
        history.setColorText(new java.awt.Color(0, 0, 0));
        history.setColorTextHover(new java.awt.Color(0, 0, 0));
        history.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });
        getContentPane().add(history);
        history.setBounds(656, 15, 90, 24);

        logout.setBackground(new java.awt.Color(113, 201, 206));
        logout.setBorder(null);
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout.setText(" LOGOUT");
        logout.setColorHover(new java.awt.Color(166, 227, 233));
        logout.setColorText(new java.awt.Color(0, 0, 0));
        logout.setColorTextHover(new java.awt.Color(0, 0, 0));
        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(852, 15, 80, 24);

        main1.setBackground(new java.awt.Color(113, 201, 206));
        main1.setBorder(null);
        main1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main1.setColorHover(new java.awt.Color(166, 227, 233));
        main1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main1ActionPerformed(evt);
            }
        });
        getContentPane().add(main1);
        main1.setBounds(0, 95, 48, 24);

        admin1.setBackground(new java.awt.Color(113, 201, 206));
        admin1.setBorder(null);
        admin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin1.setColorHover(new java.awt.Color(166, 227, 233));
        admin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin1ActionPerformed(evt);
            }
        });
        getContentPane().add(admin1);
        admin1.setBounds(0, 147, 48, 24);

        issue1.setBackground(new java.awt.Color(113, 201, 206));
        issue1.setBorder(null);
        issue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue1.setColorHover(new java.awt.Color(166, 227, 233));
        issue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue1ActionPerformed(evt);
            }
        });
        getContentPane().add(issue1);
        issue1.setBounds(0, 199, 48, 24);

        returnBook1.setBackground(new java.awt.Color(113, 201, 206));
        returnBook1.setBorder(null);
        returnBook1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook1.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook1ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook1);
        returnBook1.setBounds(0, 251, 48, 24);

        history1.setBackground(new java.awt.Color(113, 201, 206));
        history1.setBorder(null);
        history1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history1.setColorHover(new java.awt.Color(166, 227, 233));
        history1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history1ActionPerformed(evt);
            }
        });
        getContentPane().add(history1);
        history1.setBounds(0, 303, 48, 24);

        logout1.setBackground(new java.awt.Color(113, 201, 206));
        logout1.setBorder(null);
        logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout1.setColorHover(new java.awt.Color(166, 227, 233));
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });
        getContentPane().add(logout1);
        logout1.setBounds(0, 456, 48, 24);

        bookTable.setForeground(new java.awt.Color(0, 0, 0));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Title", "Author", "Genre", "ISBN", "Publication Year", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.setBackgoundHead(new java.awt.Color(113, 201, 206));
        bookTable.setBackgoundHover(new java.awt.Color(166, 227, 233));
        bookTable.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        bookTable.setColorSecondary(new java.awt.Color(166, 227, 233));
        bookTable.setColorSecundaryText(new java.awt.Color(51, 51, 51));
        bookTable.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        bookTable.setForegroundHead(new java.awt.Color(0, 0, 0));
        bookTable.setSelectionBackground(new java.awt.Color(57, 62, 70));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(72, 256, 863, 260);

        NumofBooks.setBackground(new java.awt.Color(228, 153, 198));
        NumofBooks.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NumofBooks.setOpaque(false);
        NumofBooks.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("BOOKS");
        NumofBooks.add(jLabel3);
        jLabel3.setBounds(37, 10, 120, 16);

        Bookcounter.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        Bookcounter.setText("0");
        NumofBooks.add(Bookcounter);
        Bookcounter.setBounds(45, 40, 70, 32);

        getContentPane().add(NumofBooks);
        NumofBooks.setBounds(72, 73, 115, 108);

        NumOfAuthors.setBackground(new java.awt.Color(228, 153, 198));
        NumOfAuthors.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NumOfAuthors.setOpaque(false);
        NumOfAuthors.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("AUTHORS");
        NumOfAuthors.add(jLabel5);
        jLabel5.setBounds(29, 10, 130, 16);

        Authorcounter.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        Authorcounter.setText("0");
        NumOfAuthors.add(Authorcounter);
        Authorcounter.setBounds(45, 40, 70, 32);

        getContentPane().add(NumOfAuthors);
        NumOfAuthors.setBounds(223, 73, 115, 108);

        NumOfBorrowers1.setBackground(new java.awt.Color(228, 153, 198));
        NumOfBorrowers1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        NumOfBorrowers1.setOpaque(false);
        NumOfBorrowers1.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("BORROWERS");
        NumOfBorrowers1.add(jLabel6);
        jLabel6.setBounds(21, 10, 123, 16);

        borrowercounter1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        borrowercounter1.setText("0");
        NumOfBorrowers1.add(borrowercounter1);
        borrowercounter1.setBounds(45, 40, 70, 32);

        getContentPane().add(NumOfBorrowers1);
        NumOfBorrowers1.setBounds(374, 73, 115, 108);

        filtercombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Biography/Autobiography", "Contemporary", "Fantasy", "Fiction", "Historical Fiction", "Historical Romance", "Horror", "Humor", "Mystery/Thriller", "Non-Fiction", "Poetry", "Romance", "Science", "Science Fiction", "Young Adult(YA)" }));
        filtercombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtercomboboxItemStateChanged(evt);
            }
        });
        filtercombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtercomboboxActionPerformed(evt);
            }
        });
        getContentPane().add(filtercombobox);
        filtercombobox.setBounds(102, 201, 389, 35);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/bare-Main-Frm.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 960, 540);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_mainActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_adminActionPerformed

    private void issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issueActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBookActionPerformed

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_historyActionPerformed

    private void main1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main1ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main1ActionPerformed

    private void admin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin1ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin1ActionPerformed

    private void issue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue1ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue1ActionPerformed

    private void returnBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook1ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook1ActionPerformed

    private void history1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history1ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history1ActionPerformed

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout1ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout1ActionPerformed

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bookTableMouseClicked

    private void filtercomboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtercomboboxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            tableupdate();
        }

    }//GEN-LAST:event_filtercomboboxItemStateChanged

    private void filtercomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtercomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtercomboboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Authorcounter;
    private javax.swing.JLabel Bookcounter;
    private javax.swing.JPanel NumOfAuthors;
    private javax.swing.JPanel NumOfBorrowers1;
    private javax.swing.JPanel NumofBooks;
    private rojeru_san.complementos.RSButtonHover admin;
    private rojeru_san.complementos.RSButtonHover admin1;
    private javax.swing.JLabel background;
    private rojerusan.RSTableMetro1 bookTable;
    private javax.swing.JLabel borrowercounter1;
    private javax.swing.JComboBox<String> filtercombobox;
    private rojeru_san.complementos.RSButtonHover history;
    private rojeru_san.complementos.RSButtonHover history1;
    private rojeru_san.complementos.RSButtonHover issue;
    private rojeru_san.complementos.RSButtonHover issue1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private rojeru_san.complementos.RSButtonHover logout;
    private rojeru_san.complementos.RSButtonHover logout1;
    private rojeru_san.complementos.RSButtonHover main;
    private rojeru_san.complementos.RSButtonHover main1;
    private rojeru_san.complementos.RSButtonHover returnBook;
    private rojeru_san.complementos.RSButtonHover returnBook1;
    // End of variables declaration//GEN-END:variables
}
