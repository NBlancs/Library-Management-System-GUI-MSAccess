/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lmsframes;

import com.sun.jdi.connect.spi.Connection;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class adminFrm extends javax.swing.JFrame {

    /**
     * Creates new form mainFrm
     */
    public adminFrm() {
        initComponents();
        tableupdate();
        Image icon = new ImageIcon(this.getClass().getResource("/iconimage.png")).getImage();
        this.setIconImage(icon);
    }

    java.sql.Connection con;
    java.sql.PreparedStatement pst;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public void tableupdate() {
        int c;
        String selectedGenre = (String) filtercombobox.getSelectedItem();
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);

            pst = con.prepareStatement("SELECT * FROM TBL_books WHERE genre = ? ORDER BY Title");
            pst.setString(1, selectedGenre);

            rs = pst.executeQuery();

            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel) bookTable.getModel();
            dft.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();
                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("bookid"));
                    v2.add(rs.getString("title"));
                    v2.add(rs.getString("author"));
                    v2.add(rs.getString("genre"));
                    v2.add(rs.getString("isbn"));
                    v2.add(rs.getString("publicationyear"));
                    v2.add(rs.getString("availability"));

                }
                dft.addRow(v2);

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main1 = new rojeru_san.complementos.RSButtonHover();
        admin1 = new rojeru_san.complementos.RSButtonHover();
        issue1 = new rojeru_san.complementos.RSButtonHover();
        returnBook1 = new rojeru_san.complementos.RSButtonHover();
        history1 = new rojeru_san.complementos.RSButtonHover();
        logout1 = new rojeru_san.complementos.RSButtonHover();
        main2 = new rojeru_san.complementos.RSButtonHover();
        admin2 = new rojeru_san.complementos.RSButtonHover();
        issue2 = new rojeru_san.complementos.RSButtonHover();
        returnBook2 = new rojeru_san.complementos.RSButtonHover();
        history2 = new rojeru_san.complementos.RSButtonHover();
        logout2 = new rojeru_san.complementos.RSButtonHover();
        admin = new rojeru_san.complementos.RSButtonHover();
        main = new rojeru_san.complementos.RSButtonHover();
        issue = new rojeru_san.complementos.RSButtonHover();
        returnBook = new rojeru_san.complementos.RSButtonHover();
        history = new rojeru_san.complementos.RSButtonHover();
        logout = new rojeru_san.complementos.RSButtonHover();
        admin3 = new rojeru_san.complementos.RSButtonHover();
        main3 = new rojeru_san.complementos.RSButtonHover();
        issue3 = new rojeru_san.complementos.RSButtonHover();
        returnBook3 = new rojeru_san.complementos.RSButtonHover();
        history3 = new rojeru_san.complementos.RSButtonHover();
        logout3 = new rojeru_san.complementos.RSButtonHover();
        titletxt = new javax.swing.JTextField();
        authortxt = new javax.swing.JTextField();
        genredropdown = new javax.swing.JComboBox<>();
        isbntxt = new javax.swing.JTextField();
        publicationyearformat = new javax.swing.JFormattedTextField();
        availabledropdown = new javax.swing.JComboBox<>();
        AddBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        filtercombobox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookTable = new rojerusan.RSTableMetro1();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System - Admin");
        setMinimumSize(new java.awt.Dimension(976, 579));
        getContentPane().setLayout(null);

        main1.setBackground(new java.awt.Color(113, 201, 206));
        main1.setBorder(null);
        main1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main1.setColorHover(new java.awt.Color(166, 227, 233));
        main1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main1ActionPerformed(evt);
            }
        });
        getContentPane().add(main1);
        main1.setBounds(0, 95, 48, 24);

        admin1.setBackground(new java.awt.Color(113, 201, 206));
        admin1.setBorder(null);
        admin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin1.setColorHover(new java.awt.Color(166, 227, 233));
        admin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin1ActionPerformed(evt);
            }
        });
        getContentPane().add(admin1);
        admin1.setBounds(0, 147, 48, 24);

        issue1.setBackground(new java.awt.Color(113, 201, 206));
        issue1.setBorder(null);
        issue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue1.setColorHover(new java.awt.Color(166, 227, 233));
        issue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue1ActionPerformed(evt);
            }
        });
        getContentPane().add(issue1);
        issue1.setBounds(0, 199, 48, 24);

        returnBook1.setBackground(new java.awt.Color(113, 201, 206));
        returnBook1.setBorder(null);
        returnBook1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook1.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook1ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook1);
        returnBook1.setBounds(0, 251, 48, 24);

        history1.setBackground(new java.awt.Color(113, 201, 206));
        history1.setBorder(null);
        history1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history1.setColorHover(new java.awt.Color(166, 227, 233));
        history1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history1ActionPerformed(evt);
            }
        });
        getContentPane().add(history1);
        history1.setBounds(0, 303, 48, 24);

        logout1.setBackground(new java.awt.Color(113, 201, 206));
        logout1.setBorder(null);
        logout1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout1.setColorHover(new java.awt.Color(166, 227, 233));
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });
        getContentPane().add(logout1);
        logout1.setBounds(0, 456, 48, 24);

        main2.setBackground(new java.awt.Color(113, 201, 206));
        main2.setBorder(null);
        main2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main2.setColorHover(new java.awt.Color(166, 227, 233));
        main2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main2ActionPerformed(evt);
            }
        });
        getContentPane().add(main2);
        main2.setBounds(0, 95, 48, 24);

        admin2.setBackground(new java.awt.Color(113, 201, 206));
        admin2.setBorder(null);
        admin2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin2.setColorHover(new java.awt.Color(166, 227, 233));
        admin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin2ActionPerformed(evt);
            }
        });
        getContentPane().add(admin2);
        admin2.setBounds(0, 147, 48, 24);

        issue2.setBackground(new java.awt.Color(113, 201, 206));
        issue2.setBorder(null);
        issue2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue2.setColorHover(new java.awt.Color(166, 227, 233));
        issue2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue2ActionPerformed(evt);
            }
        });
        getContentPane().add(issue2);
        issue2.setBounds(0, 199, 48, 24);

        returnBook2.setBackground(new java.awt.Color(113, 201, 206));
        returnBook2.setBorder(null);
        returnBook2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook2.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook2ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook2);
        returnBook2.setBounds(0, 251, 48, 24);

        history2.setBackground(new java.awt.Color(113, 201, 206));
        history2.setBorder(null);
        history2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history2.setColorHover(new java.awt.Color(166, 227, 233));
        history2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history2ActionPerformed(evt);
            }
        });
        getContentPane().add(history2);
        history2.setBounds(0, 303, 48, 24);

        logout2.setBackground(new java.awt.Color(113, 201, 206));
        logout2.setBorder(null);
        logout2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout2.setColorHover(new java.awt.Color(166, 227, 233));
        logout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout2ActionPerformed(evt);
            }
        });
        getContentPane().add(logout2);
        logout2.setBounds(0, 456, 48, 24);

        admin.setBackground(new java.awt.Color(113, 201, 206));
        admin.setBorder(null);
        admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin.setText(" ADMIN TOOLS");
        admin.setColorHover(new java.awt.Color(166, 227, 233));
        admin.setColorText(new java.awt.Color(0, 0, 0));
        admin.setColorTextHover(new java.awt.Color(0, 0, 0));
        admin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        getContentPane().add(admin);
        admin.setBounds(240, 15, 120, 24);

        main.setBackground(new java.awt.Color(113, 201, 206));
        main.setBorder(null);
        main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main.setText(" MAIN MENU");
        main.setColorHover(new java.awt.Color(166, 227, 233));
        main.setColorText(new java.awt.Color(0, 0, 0));
        main.setColorTextHover(new java.awt.Color(0, 0, 0));
        main.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainActionPerformed(evt);
            }
        });
        getContentPane().add(main);
        main.setBounds(118, 15, 100, 24);

        issue.setBackground(new java.awt.Color(113, 201, 206));
        issue.setBorder(null);
        issue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue.setText(" ISSUE BOOK");
        issue.setColorHover(new java.awt.Color(166, 227, 233));
        issue.setColorText(new java.awt.Color(0, 0, 0));
        issue.setColorTextHover(new java.awt.Color(0, 0, 0));
        issue.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueActionPerformed(evt);
            }
        });
        getContentPane().add(issue);
        issue.setBounds(382, 15, 120, 24);

        returnBook.setBackground(new java.awt.Color(113, 201, 206));
        returnBook.setBorder(null);
        returnBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook.setText(" RETURN BOOK");
        returnBook.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook.setColorText(new java.awt.Color(0, 0, 0));
        returnBook.setColorTextHover(new java.awt.Color(0, 0, 0));
        returnBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook);
        returnBook.setBounds(510, 15, 130, 24);

        history.setBackground(new java.awt.Color(113, 201, 206));
        history.setBorder(null);
        history.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history.setText(" HISTORY");
        history.setColorHover(new java.awt.Color(166, 227, 233));
        history.setColorText(new java.awt.Color(0, 0, 0));
        history.setColorTextHover(new java.awt.Color(0, 0, 0));
        history.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyActionPerformed(evt);
            }
        });
        getContentPane().add(history);
        history.setBounds(656, 15, 90, 24);

        logout.setBackground(new java.awt.Color(113, 201, 206));
        logout.setBorder(null);
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout.setText(" LOGOUT");
        logout.setColorHover(new java.awt.Color(166, 227, 233));
        logout.setColorText(new java.awt.Color(0, 0, 0));
        logout.setColorTextHover(new java.awt.Color(0, 0, 0));
        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(852, 15, 80, 24);

        admin3.setBackground(new java.awt.Color(113, 201, 206));
        admin3.setBorder(null);
        admin3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-administrative-tools-24.png"))); // NOI18N
        admin3.setText(" ADMIN TOOLS");
        admin3.setColorHover(new java.awt.Color(166, 227, 233));
        admin3.setColorText(new java.awt.Color(0, 0, 0));
        admin3.setColorTextHover(new java.awt.Color(0, 0, 0));
        admin3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        admin3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin3ActionPerformed(evt);
            }
        });
        getContentPane().add(admin3);
        admin3.setBounds(240, 15, 120, 24);

        main3.setBackground(new java.awt.Color(113, 201, 206));
        main3.setBorder(null);
        main3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-menu-24.png"))); // NOI18N
        main3.setText(" MAIN MENU");
        main3.setColorHover(new java.awt.Color(166, 227, 233));
        main3.setColorText(new java.awt.Color(0, 0, 0));
        main3.setColorTextHover(new java.awt.Color(0, 0, 0));
        main3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        main3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main3ActionPerformed(evt);
            }
        });
        getContentPane().add(main3);
        main3.setBounds(118, 15, 100, 24);

        issue3.setBackground(new java.awt.Color(113, 201, 206));
        issue3.setBorder(null);
        issue3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-add-24.png"))); // NOI18N
        issue3.setText(" ISSUE BOOK");
        issue3.setColorHover(new java.awt.Color(166, 227, 233));
        issue3.setColorText(new java.awt.Color(0, 0, 0));
        issue3.setColorTextHover(new java.awt.Color(0, 0, 0));
        issue3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        issue3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue3ActionPerformed(evt);
            }
        });
        getContentPane().add(issue3);
        issue3.setBounds(382, 15, 120, 24);

        returnBook3.setBackground(new java.awt.Color(113, 201, 206));
        returnBook3.setBorder(null);
        returnBook3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-return-24.png"))); // NOI18N
        returnBook3.setText(" RETURN BOOK");
        returnBook3.setColorHover(new java.awt.Color(166, 227, 233));
        returnBook3.setColorText(new java.awt.Color(0, 0, 0));
        returnBook3.setColorTextHover(new java.awt.Color(0, 0, 0));
        returnBook3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        returnBook3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook3ActionPerformed(evt);
            }
        });
        getContentPane().add(returnBook3);
        returnBook3.setBounds(510, 15, 130, 24);

        history3.setBackground(new java.awt.Color(113, 201, 206));
        history3.setBorder(null);
        history3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-history-24.png"))); // NOI18N
        history3.setText(" HISTORY");
        history3.setColorHover(new java.awt.Color(166, 227, 233));
        history3.setColorText(new java.awt.Color(0, 0, 0));
        history3.setColorTextHover(new java.awt.Color(0, 0, 0));
        history3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        history3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                history3ActionPerformed(evt);
            }
        });
        getContentPane().add(history3);
        history3.setBounds(656, 15, 90, 24);

        logout3.setBackground(new java.awt.Color(113, 201, 206));
        logout3.setBorder(null);
        logout3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-logout-24.png"))); // NOI18N
        logout3.setText(" LOGOUT");
        logout3.setColorHover(new java.awt.Color(166, 227, 233));
        logout3.setColorText(new java.awt.Color(0, 0, 0));
        logout3.setColorTextHover(new java.awt.Color(0, 0, 0));
        logout3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout3ActionPerformed(evt);
            }
        });
        getContentPane().add(logout3);
        logout3.setBounds(852, 15, 80, 24);

        titletxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titletxtActionPerformed(evt);
            }
        });
        getContentPane().add(titletxt);
        titletxt.setBounds(110, 403, 200, 25);
        getContentPane().add(authortxt);
        authortxt.setBounds(110, 445, 200, 25);

        genredropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Biography/Autobiography", "Contemporary", "Fantasy", "Fiction", "Historical Fiction", "Historical Romance", "Horror", "Humor", "Mystery/Thriller", "Non-Fiction", "Poetry", "Romance", "Science", "Science Fiction", "Young Adult(YA)", " " }));
        genredropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genredropdownActionPerformed(evt);
            }
        });
        getContentPane().add(genredropdown);
        genredropdown.setBounds(110, 487, 200, 25);
        getContentPane().add(isbntxt);
        isbntxt.setBounds(416, 403, 200, 25);

        try {
            publicationyearformat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        publicationyearformat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicationyearformatActionPerformed(evt);
            }
        });
        getContentPane().add(publicationyearformat);
        publicationyearformat.setBounds(416, 445, 200, 25);

        availabledropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not Available" }));
        availabledropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabledropdownActionPerformed(evt);
            }
        });
        getContentPane().add(availabledropdown);
        availabledropdown.setBounds(416, 487, 200, 30);

        AddBtn.setBackground(new java.awt.Color(204, 255, 204));
        AddBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AddBtn.setText("ADD");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AddBtn);
        AddBtn.setBounds(685, 400, 225, 35);

        deleteBtn.setBackground(new java.awt.Color(255, 204, 204));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteBtn.setText("REMOVE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBtn);
        deleteBtn.setBounds(685, 443, 225, 35);

        updateBtn.setBackground(new java.awt.Color(255, 255, 204));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(updateBtn);
        updateBtn.setBounds(685, 487, 225, 35);

        filtercombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Biography/Autobiography", "Contemporary", "Fantasy", "Fiction", "Historical Fiction", "Historical Romance", "Horror", "Humor", "Mystery/Thriller", "Non-Fiction", "Poetry", "Romance", "Science", "Science Fiction", "Young Adult(YA)", " " }));
        filtercombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtercomboboxItemStateChanged(evt);
            }
        });
        filtercombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtercomboboxActionPerformed(evt);
            }
        });
        getContentPane().add(filtercombobox);
        filtercombobox.setBounds(102, 70, 231, 30);

        bookTable.setForeground(new java.awt.Color(0, 0, 0));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Title", "Author", "Genre", "ISBN", "Publication Year", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.setBackgoundHead(new java.awt.Color(113, 201, 206));
        bookTable.setBackgoundHover(new java.awt.Color(166, 227, 233));
        bookTable.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        bookTable.setColorSecondary(new java.awt.Color(166, 227, 233));
        bookTable.setColorSecundaryText(new java.awt.Color(51, 51, 51));
        bookTable.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        bookTable.setForegroundHead(new java.awt.Color(0, 0, 0));
        bookTable.setSelectionBackground(new java.awt.Color(57, 62, 70));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(68, 114, 863, 264);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/bare-AdminTools-Frm.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 960, 540);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void main1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main1ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main1ActionPerformed

    private void admin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin1ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin1ActionPerformed

    private void issue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue1ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue1ActionPerformed

    private void returnBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook1ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook1ActionPerformed

    private void history1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history1ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history1ActionPerformed

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout1ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout1ActionPerformed

    private void main2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main2ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main2ActionPerformed

    private void admin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin2ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin2ActionPerformed

    private void issue2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue2ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue2ActionPerformed

    private void returnBook2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook2ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook2ActionPerformed

    private void history2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history2ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history2ActionPerformed

    private void logout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout2ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout2ActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_adminActionPerformed

    private void mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_mainActionPerformed

    private void issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issueActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBookActionPerformed

    private void historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_historyActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void admin3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin3ActionPerformed
        // TODO add your handling code here:
        adminFrm adminFRM = new adminFrm();
        adminFRM.show();
        dispose();
    }//GEN-LAST:event_admin3ActionPerformed

    private void main3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main3ActionPerformed
        // TODO add your handling code here:
        mainFrm MainFRM = new mainFrm();
        MainFRM.show();
        dispose();
    }//GEN-LAST:event_main3ActionPerformed

    private void issue3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue3ActionPerformed
        // TODO add your handling code here:
        issueFrm issueFRM = new issueFrm();
        issueFRM.show();
        dispose();
    }//GEN-LAST:event_issue3ActionPerformed

    private void returnBook3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBook3ActionPerformed
        // TODO add your handling code here:
        returnFrm returnFRM = new returnFrm();
        returnFRM.show();
        dispose();
    }//GEN-LAST:event_returnBook3ActionPerformed

    private void history3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_history3ActionPerformed
        // TODO add your handling code here:
        historyFrm historyFRM = new historyFrm();
        historyFRM.show();
        dispose();
    }//GEN-LAST:event_history3ActionPerformed

    private void logout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout3ActionPerformed
        // TODO add your handling code here:
        loginFrm loginFRM = new loginFrm();
        loginFRM.show();
        dispose();
    }//GEN-LAST:event_logout3ActionPerformed

    private void titletxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titletxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titletxtActionPerformed

    private void genredropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genredropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genredropdownActionPerformed

    private void publicationyearformatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicationyearformatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publicationyearformatActionPerformed

    private void availabledropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabledropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availabledropdownActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:

        String title, author, genre, isbn, publicationYear, availability;

        title = titletxt.getText();
        author = authortxt.getText();
        genre = (String) genredropdown.getSelectedItem();
        isbn = isbntxt.getText();
        publicationYear = publicationyearformat.getText();
        availability = (String) availabledropdown.getSelectedItem();
        if (title.isEmpty() || author.isEmpty() || genre.isEmpty() || isbn.isEmpty() || publicationYear.isEmpty() || availability.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please put value in the textfields", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (publicationYear.isEmpty() || publicationYear.equals("  -  -    ")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid publication year", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        SimpleDateFormat inputFormat = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date parsedDate;
        try {
            parsedDate = inputFormat.parse(publicationYear);
        } catch (ParseException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.WARNING, "Unable to parse publication year: " + publicationYear, ex);
            return;
        }
        String formattedDate = outputFormat.format(parsedDate);

        try {

            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
            pst = con.prepareStatement("insert into TBL_books(Title,Author,Genre,ISBN,PublicationYear,Availability)values(?,?,?,?,?,?)");

            pst.setString(1, title);
            pst.setString(2, author);
            pst.setString(3, genre);
            pst.setString(4, isbn);
            pst.setString(5, formattedDate);
            pst.setString(6, availability);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Added");
            titletxt.setText("");
            authortxt.setText("");
            genredropdown.setSelectedItem("");
            isbntxt.setText("");
            publicationyearformat.setText("");
            availabledropdown.setSelectedItem("");

            titletxt.requestFocus();

            tableupdate();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        } catch (SQLException ex) {
            Logger logger = Logger.getLogger(adminFrm.class.getName());
            logger.setLevel(Level.OFF);  // Turn off logging for this logger
            JOptionPane.showMessageDialog(this, "Please enter the appropriate data type needed for the record", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        int selectedIndex = bookTable.getSelectedRow();

        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a record to delete", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());

        int dialogresult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record?", "Warning", JOptionPane.YES_NO_OPTION);

        if (dialogresult == JOptionPane.YES_NO_OPTION) {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
                con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
                pst = con.prepareStatement("delete from TBL_books where bookid=?");

                pst.setInt(1, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Deleted");
                tableupdate();

                titletxt.setText("");
                authortxt.setText("");
                genredropdown.setSelectedItem("");
                isbntxt.setText("");
                publicationyearformat.setText("");
                availabledropdown.setSelectedItem("");

                titletxt.requestFocus();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        int selectedIndex = bookTable.getSelectedRow();

        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a record to update", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());

        String title, author, genre, isbn, publicationYear, availability;

        title = titletxt.getText();
        author = authortxt.getText();
        genre = (String) genredropdown.getSelectedItem();
        isbn = isbntxt.getText();
        publicationYear = publicationyearformat.getText();
        availability = (String) availabledropdown.getSelectedItem();

        SimpleDateFormat inputFormat = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");

        Date parsedDate;
        try {
            parsedDate = inputFormat.parse(publicationYear);
        } catch (ParseException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.WARNING, "Unable to parse publication year: " + publicationYear, ex);
            return;
        }
        String formattedDate = outputFormat.format(parsedDate);

        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            String path = new File("src/LibaryManangementSystem_db.accdb").getAbsolutePath();
            con = DriverManager.getConnection("jdbc:ucanaccess://" + path);
            pst = con.prepareStatement("update TBL_books set Title=?,Author=?,Genre=?,ISBN=?,PublicationYear=?, Availability=? where bookid=?");

            pst.setString(1, title);
            pst.setString(2, author);
            pst.setString(3, genre);
            pst.setString(4, isbn);
            pst.setString(5, formattedDate);
            pst.setString(6, availability);
            pst.setInt(7, id);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Updated");
            titletxt.setText("");
            authortxt.setText("");
            genredropdown.setSelectedItem("");
            isbntxt.setText("");
            publicationyearformat.setText("");
            availabledropdown.setSelectedItem("");

            titletxt.requestFocus();

            tableupdate();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        } catch (SQLException ex) {
            Logger logger = Logger.getLogger(adminFrm.class.getName());
            logger.setLevel(Level.OFF);  // Turn off logging for this logger
            JOptionPane.showMessageDialog(this, "Please enter the appropriate data type needed for the record", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
            int selectedIndex = bookTable.getSelectedRow();

            titletxt.setText(model.getValueAt(selectedIndex, 1).toString());
            authortxt.setText(model.getValueAt(selectedIndex, 2).toString());
            genredropdown.setSelectedItem(model.getValueAt(selectedIndex, 3).toString());
            isbntxt.setText(model.getValueAt(selectedIndex, 4).toString());

            SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat outputFormat = new SimpleDateFormat("dd-MM-yyyy");

            String inputDateStr = model.getValueAt(selectedIndex, 5).toString();
            Date date = inputFormat.parse(inputDateStr);

            String outputDateStr = outputFormat.format(date);
            publicationyearformat.setText(outputDateStr);

            availabledropdown.setSelectedItem(model.getValueAt(selectedIndex, 6).toString());
        } catch (ParseException ex) {
            Logger.getLogger(adminFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookTableMouseClicked

    private void filtercomboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtercomboboxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            tableupdate();
        }

    }//GEN-LAST:event_filtercomboboxItemStateChanged

    private void filtercomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtercomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtercomboboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private rojeru_san.complementos.RSButtonHover admin;
    private rojeru_san.complementos.RSButtonHover admin1;
    private rojeru_san.complementos.RSButtonHover admin2;
    private rojeru_san.complementos.RSButtonHover admin3;
    private javax.swing.JTextField authortxt;
    private javax.swing.JComboBox<String> availabledropdown;
    private javax.swing.JLabel background;
    private rojerusan.RSTableMetro1 bookTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> filtercombobox;
    private javax.swing.JComboBox<String> genredropdown;
    private rojeru_san.complementos.RSButtonHover history;
    private rojeru_san.complementos.RSButtonHover history1;
    private rojeru_san.complementos.RSButtonHover history2;
    private rojeru_san.complementos.RSButtonHover history3;
    private javax.swing.JTextField isbntxt;
    private rojeru_san.complementos.RSButtonHover issue;
    private rojeru_san.complementos.RSButtonHover issue1;
    private rojeru_san.complementos.RSButtonHover issue2;
    private rojeru_san.complementos.RSButtonHover issue3;
    private javax.swing.JScrollPane jScrollPane2;
    private rojeru_san.complementos.RSButtonHover logout;
    private rojeru_san.complementos.RSButtonHover logout1;
    private rojeru_san.complementos.RSButtonHover logout2;
    private rojeru_san.complementos.RSButtonHover logout3;
    private rojeru_san.complementos.RSButtonHover main;
    private rojeru_san.complementos.RSButtonHover main1;
    private rojeru_san.complementos.RSButtonHover main2;
    private rojeru_san.complementos.RSButtonHover main3;
    private javax.swing.JFormattedTextField publicationyearformat;
    private rojeru_san.complementos.RSButtonHover returnBook;
    private rojeru_san.complementos.RSButtonHover returnBook1;
    private rojeru_san.complementos.RSButtonHover returnBook2;
    private rojeru_san.complementos.RSButtonHover returnBook3;
    private javax.swing.JTextField titletxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
